name: Deploy Sky Take-out Backend

on:
  push:
    branches: [ "main" ]
    paths:
      - 'foodDelivery/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package -f foodDelivery/pom.xml -DskipTests

      - name: Prepare Artifact for Deployment
        run: cp foodDelivery/sky-server/target/*.jar ./sky-server.jar

      - name: Copy JAR to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "sky-server.jar"
          target: "/project/sky-take-out/jar"
          rename: "sky-server.jar"
          overwrite: true

      # --- 这是最终的、唯一的修正 ---
      - name: Create Production Config and Restart Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 1. 【核心步骤】使用 Secret 的内容，在服务器上创建或覆盖 application-prod.yml 文件
            # Spring Boot 会自动加载与 .jar 文件位于同一目录下的这个配置文件
            echo "${{ secrets.APPLICATION_PROD_YML }}" > /project/sky-take-out/jar/application-prod.yml

            # 2. 停止旧服务
            PID=$(ps -ef | grep 'sky-server.jar' | grep -v grep | awk '{print $2}')
            if [ -n "$PID" ]; then
              kill -9 $PID
            fi
            
            # 3. 启动新服务，并激活 prod 环境
            # 它会自动读取我们刚刚创建的 application-prod.yml
            # 使用您之前找到的、正确的 Java 绝对路径
            nohup /www/server/java/jdk-21.0.2/bin/java -jar /project/sky-take-out/jar/sky-server.jar --spring.profiles.active=prod > /dev/null 2>&1 &